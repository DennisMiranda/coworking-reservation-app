---
// Component for reservation detail/edit form matching the original design
---

<div class="bg-white shadow rounded-lg p-6">
  <div id="reservation-detail-panel">
    <!-- Default state - no reservation selected -->
    <div id="default-panel" class="text-center text-gray-500">
      <h3 class="text-lg font-medium text-gray-900 mb-2">Reservation Detail</h3>
      <p class="text-sm text-gray-600 mb-4">Select a reservation to edit</p>
      <div class="text-gray-400">
        <svg
          class="w-16 h-16 mx-auto mb-4"
          fill="currentColor"
          viewBox="0 0 20 20"
        >
          <path
            fill-rule="evenodd"
            d="M4 4a2 2 0 012-2h8a2 2 0 012 2v12a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 0v12h8V4H6z"
            clip-rule="evenodd"></path>
        </svg>
        <p>Click the edit icon to modify a reservation</p>
      </div>
    </div>

    <!-- Edit form - hidden by default -->
    <div id="edit-form" class="hidden">
      <h3 class="text-lg font-medium text-gray-900 mb-2">Reservation Detail</h3>
      <p class="text-sm text-gray-600 mb-6">Confirm your reservation</p>

      <form id="reservation-form">
        <div class="space-y-4">
          <!-- Date Reservation -->
          <div>
            <label
              class="flex items-center text-sm font-medium text-gray-700 mb-2"
            >
              üìÖ Date Reservation
            </label>
            <input
              type="date"
              id="reservation-date"
              name="reservation-date"
              class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500 text-sm"
            />
          </div>

          <!-- Time Reservation -->
          <div>
            <label
              class="flex items-center text-sm font-medium text-gray-700 mb-2"
            >
              ‚è∞ Time Reservation
            </label>
            <div class="grid grid-cols-2 gap-2">
              <input
                type="time"
                id="start-time"
                name="start-time"
                class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500 text-sm"
              />
              <input
                type="time"
                id="end-time"
                name="end-time"
                class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500 text-sm"
              />
            </div>
          </div>

          <!-- Block this date checkbox -->
          <div class="flex items-center">
            <input
              type="checkbox"
              id="block-date"
              name="block-date"
              class="h-4 w-4 text-gray-600 border-gray-300 rounded focus:ring-gray-500"
            />
            <label for="block-date" class="ml-2 text-sm text-gray-700">
              Block this date
            </label>
          </div>

          <!-- Reservation Title -->
          <div>
            <label
              for="reservation-title"
              class="block text-sm font-medium text-gray-700 mb-2"
            >
              Reservation Title
            </label>
            <input
              type="text"
              id="reservation-title"
              name="reservation-title"
              placeholder="My Meeting"
              class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500 text-sm"
            />
          </div>

          <!-- Client name -->
          <div>
            <label
              for="client-name"
              class="block text-sm font-medium text-gray-700 mb-2"
            >
              Client name *
            </label>
            <input
              type="text"
              id="client-name"
              name="client-name"
              placeholder="John Doe"
              class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500 text-sm"
            />
          </div>

          <!-- Email -->
          <div>
            <label
              for="client-email"
              class="block text-sm font-medium text-gray-700 mb-2"
            >
              Email *
            </label>
            <input
              type="email"
              id="client-email"
              name="client-email"
              placeholder="john.doe@example.com"
              class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500 text-sm"
            />
          </div>

          <!-- Phone -->
          <div>
            <label
              for="client-phone"
              class="block text-sm font-medium text-gray-700 mb-2"
            >
              Phone *
            </label>
            <input
              type="tel"
              id="client-phone"
              name="client-phone"
              placeholder="123456789"
              class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500 text-sm"
            />
          </div>

          <!-- Confirm Button -->
          <div class="pt-4">
            <button
              type="submit"
              class="w-full bg-black text-white py-3 px-4 rounded-md hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 text-sm font-medium"
            >
              Confirm
            </button>
          </div>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
  import type { UserReservationResponse } from "/src/models/reservation";
  import { updateReservation } from "/src/services/admin";

  document.addEventListener("DOMContentLoaded", function () {
    let originalReservationData: UserReservationResponse | null = null;
    const defaultPanel = document.getElementById("default-panel");
    const editForm = document.getElementById("edit-form");

    // Show default panel
    function showDefaultPanel() {
      defaultPanel.classList.remove("hidden");
      editForm.classList.add("hidden");
    }

    // Show edit form with reservation data
    function showEditForm(reservationData: UserReservationResponse) {
      defaultPanel.classList.add("hidden");
      editForm.classList.remove("hidden");

      // Populate form with reservation data if provided
      if (reservationData) {
        originalReservationData = reservationData;
        const {
          client_email,
          client_name,
          client_phone,
          end,
          id,
          product_id,
          start,
          status,
          timezone,
          title,
          user_id,
        } = reservationData;
        console.log("Editing reservation:", reservationData);

        // You can populate the form fields here based on the reservation data
        // For now, we'll show example data
        document.getElementById("client-name").value = client_name;
        document.getElementById("client-email").value = client_email;
        document.getElementById("client-phone").value = client_phone;
        document.getElementById("reservation-title").value = title;

        // Set today's date as default
        document.getElementById("reservation-date").value = start.split("T")[0];
        document.getElementById("start-time").value = "09:00";
        document.getElementById("end-time").value = "10:00";
      }
    }

    // Listen for edit reservation events from tables
    window.addEventListener("edit-reservation", function (e) {
      showEditForm(e.detail);
    });

    // Listen for clicks on edit buttons in tables
    document.addEventListener("click", function (e) {
      if (e.target.classList.contains("edit-reservation-btn")) {
        console.log("Editing reservation:", e.target);

        const reservationData = e.target.dataset as UserReservationResponse;

        showEditForm(reservationData);
      }
    });

    // Form submission
    document
      .getElementById("reservation-form")
      ?.addEventListener("submit", async function (e) {
        e.preventDefault();

        const formData = new FormData(this);
        const client = {
          name: formData.get("client-name") as string,
          email: formData.get("client-email") as string,
          phone: formData.get("client-phone") as string,
        };
        const title = formData.get("reservation-title") as string;
        const start = new Date(
          formData.get("reservation-date") + "T" + formData.get("start-time")
        ).toISOString();
        const end = new Date(
          formData.get("reservation-date") + "T" + formData.get("end-time")
        ).toISOString();

        const { id, user_id, timezone } = originalReservationData;

        const { success, message } = await updateReservation(id, user_id, {
          start,
          end,
          client,
          timezone: Number(timezone) || 0,
          title,
        });

        console.log("Saving reservation:", message, originalReservationData);

        // Here you would call the admin service to save the reservation
        // For now, just show success and return to default state
        alert("Reservation saved successfully!");
        showDefaultPanel();
      });

    // Handle block date checkbox
    document
      .getElementById("block-date")
      ?.addEventListener("change", function (e) {
        if (e.target.checked) {
          console.log("Date will be blocked");
          // You can add additional logic here for blocking dates
        }
      });
  });
</script>
